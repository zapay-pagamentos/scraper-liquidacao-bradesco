name: get-bradesco deploy

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'pip'
      - name: Update Package References
        run: sudo apt update
      - name: Install pycurl dependencies
        run: sudo apt-get install libcurl4-gnutls-dev librtmp-dev
      - name: Install dependencies
        run: python3 -m pip install -r requirements.txt
      - name: Flake8
        run: python3 -m flake8
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Sonar Check
        continue-on-error: true
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  push_docker_image:
    name: PUSH production docker image
    runs-on: ubuntu-latest
    needs: flake8
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
          mask-aws-account-id: 'no'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: zapay/bbdc-receipts:latest
          context: .
          cache-from: type=registry,ref=zapay/bbdc-receipts:latest
          cache-to: type=inline
  deploy_production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: push_docker_image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy Staging
        uses: zapay-pagamentos/restart-kubectl@v0
        with:
          namespace: production
          deployment: bbdc-receipts
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.K8S_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.K8S_AWS_SECRET_ACCESS_KEY }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
